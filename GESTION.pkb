CREATE OR REPLACE PACKAGE BODY MARIO.GESTION 
IS
    FUNCTION INSERTAR_CREACION(V_NOM_PLAT PLATAFORMAS.NOMBRE%TYPE, 
            N_POT_PLAT PLATAFORMAS.POTENCIA%TYPE, V_TIT_AVEN AVENTURAS.TITULO%TYPE, 
            V_POR_AVEN AVENTURAS.PORTADA%TYPE, N_ANYO_AVEN AVENTURAS.ANYO%TYPE, 
            V_DES_AVEN AVENTURAS.DESCRIPCION%TYPE, V_OBJ_AVEN AVENTURAS.OBJETIVO%TYPE, 
            V_TITRK_AVEN AVENTURAS.TITULO_REMAKE%TYPE, V_IMP_AVEN AVENTURAS.IMPLEMENTACION%TYPE)
            RETURN VARCHAR2
    IS
        RESULTADO VARCHAR2(150) := NULL;
        FK_VIOLADA EXCEPTION;
        PRAGMA EXCEPTION_INIT(FK_VIOLADA, -02291);
    BEGIN
        BEGIN
            INSERT INTO AVENTURAS 
            (TITULO,PORTADA,ANYO,DESCRIPCION,OBJETIVO,IMPLEMENTACION,TITULO_REMAKE)
            VALUES
            (V_TIT_AVEN,V_POR_AVEN,N_ANYO_AVEN,V_DES_AVEN,V_OBJ_AVEN,V_IMP_AVEN,V_TITRK_AVEN);
        EXCEPTION
            WHEN DUP_VAL_ON_INDEX THEN
                UPDATE AVENTURAS
                SET PORTADA = V_POR_AVEN,
                    ANYO = N_ANYO_AVEN,
                    DESCRIPCION = V_DES_AVEN,
                    OBJETIVO = V_OBJ_AVEN,
                    IMPLEMENTACION = V_IMP_AVEN,
                    TITULO_REMAKE = V_TITRK_AVEN
                WHERE TITULO = V_TIT_AVEN;
            WHEN FK_VIOLADA THEN
                RESULTADO := 'EL TÍTULO REMAKE NO EXISTE EN LA BASE DE DATOS';
            WHEN OTHERS THEN
                RESULTADO := SQLERRM;
        END;
        
        IF RESULTADO IS NULL THEN
            BEGIN
                INSERT INTO PLATAFORMAS
                (NOMBRE,POTENCIA)
                VALUES
                (V_NOM_PLAT,N_POT_PLAT);
            EXCEPTION
                WHEN DUP_VAL_ON_INDEX THEN
                    UPDATE PLATAFORMAS
                    SET POTENCIA = N_POT_PLAT
                    WHERE NOMBRE = V_NOM_PLAT;
                WHEN OTHERS THEN
                    RESULTADO := SQLERRM;
            END;
            
            IF RESULTADO IS NULL THEN
                BEGIN
                    INSERT INTO CREARSE_PARA
                    (TITULO_AVENTURA,NOMBRE_PLATAFORMA)
                    VALUES
                    (V_TIT_AVEN,V_NOM_PLAT);
                EXCEPTION
                    WHEN DUP_VAL_ON_INDEX THEN
                        RESULTADO := 'ESTA AVENTURA YA HA SIDO CREADA PARA LA PLATAFORMA CON ANTERIORIDAD';
                    WHEN OTHERS THEN
                        RESULTADO := SQLERRM;
                END;
            END IF;
        END IF;
        
        RETURN RESULTADO;
    END INSERTAR_CREACION;

    FUNCTION ELIMINAR_AVENTURA(V_TIT_AVEN AVENTURAS.TITULO%TYPE)
            RETURN VARCHAR2
    IS
        DATO AVENTURAS.TITULO%TYPE;
        REGISTRO_NO_ENCONTRADO EXCEPTION;
    BEGIN
        DELETE CREARSE_PARA
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE BASARSE_EN
        WHERE TITULO_AVENTURA = V_TIT_AVEN OR
            TITULO_REFERENTE = V_TIT_AVEN;
        UPDATE AVENTURAS
        SET TITULO_REMAKE = NULL,
            IMPLEMENTACION = NULL
        WHERE TITULO_REMAKE = V_TIT_AVEN;
        DELETE AVENTURAS
        WHERE TITULO = V_TIT_AVEN
        RETURNING TITULO INTO DATO;
        
        IF DATO IS NULL THEN 
        RAISE REGISTRO_NO_ENCONTRADO;
        END IF;
        
        RETURN NULL;
    EXCEPTION 
        WHEN REGISTRO_NO_ENCONTRADO THEN
            RETURN 'AVENTURA NO ENCONTRADA';
        WHEN OTHERS THEN
            IF SQLCODE = -02292 THEN
                RETURN 'ESTA AVENTURA PARTICIPA EN OTRAS TABLAS';
            ELSE
                RETURN SQLERRM;
            END IF;
    END ELIMINAR_AVENTURA;
    
    FUNCTION ELIMINAR_PLATAFORMA(V_NOM_PLAT PLATAFORMAS.NOMBRE%TYPE)
        RETURN VARCHAR2
    IS
        DATO PLATAFORMAS.NOMBRE%TYPE;
        REGISTRO_NO_ENCONTRADO EXCEPTION;
    BEGIN
        DELETE CREARSE_PARA
        WHERE NOMBRE_PLATAFORMA = V_NOM_PLAT;
        DELETE PLATAFORMAS
        WHERE NOMBRE = V_NOM_PLAT
        RETURNING NOMBRE INTO DATO;
        
        IF DATO IS NULL THEN 
        RAISE REGISTRO_NO_ENCONTRADO;
        END IF;
        
        RETURN NULL;
    EXCEPTION 
        WHEN REGISTRO_NO_ENCONTRADO THEN
            RETURN 'PLATAFORMA NO ENCONTRADA';
        WHEN OTHERS THEN
            IF SQLCODE = -02292 THEN
                RETURN 'ESTA PLATAFORMA PARTICIPA EN OTRAS TABLAS';
            END IF;
    END ELIMINAR_PLATAFORMA;

    FUNCTION ELIMINAR_AVENTURA_COMPLETO(V_TIT_AVEN AVENTURAS.TITULO%TYPE)
        RETURN VARCHAR2
    IS
        DATO AVENTURAS.TITULO%TYPE;
        REGISTRO_NO_ENCONTRADO EXCEPTION;
    BEGIN
        DELETE SER_BONIFICACION
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE SER_REVANCHA
        WHERE TITULO_AVENTURA_ANT = V_TIT_AVEN OR
            TITULO_AVENTURA_REV = V_TIT_AVEN;
        DELETE DESAFIAR_EN
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE NIVEL_JEFE
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE DESBLOQUEAR
        WHERE TITULO_AVENTURA_META = V_TIT_AVEN OR
            TITULO_AVENTURA_NIVEL = V_TIT_AVEN;
        DELETE META
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE PUNTOS_GUARDADO
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE BONUS
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE MISIONES
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE PUNTOS_GUARDADO
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE ENCONTRARSE_EN
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE NIVELES
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE MUNDOS
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE SALIR_EN
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE SER_COMPATIBLE
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE APARECER
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE CREARSE_PARA
        WHERE TITULO_AVENTURA = V_TIT_AVEN;
        DELETE BASARSE_EN
        WHERE TITULO_AVENTURA = V_TIT_AVEN OR
            TITULO_REFERENTE = V_TIT_AVEN;
        UPDATE AVENTURAS
        SET TITULO_REMAKE = NULL,
            IMPLEMENTACION = NULL
        WHERE TITULO_REMAKE = V_TIT_AVEN;
        DELETE AVENTURAS
        WHERE TITULO = V_TIT_AVEN
        RETURNING TITULO INTO DATO;
        
        IF DATO IS NULL THEN 
        RAISE REGISTRO_NO_ENCONTRADO;
        END IF;
        RETURN NULL;
    EXCEPTION 
        WHEN REGISTRO_NO_ENCONTRADO THEN
            RETURN 'AVENTURA NO ENCONTRADA';
        WHEN OTHERS THEN
            RETURN SQLERRM;
    END ELIMINAR_AVENTURA_COMPLETO;

    FUNCTION ELIMINAR_PLATAFORMA_COMPLETO(V_NOM_PLAT PLATAFORMAS.NOMBRE%TYPE)
        RETURN VARCHAR2
    IS
        DATO PLATAFORMAS.NOMBRE%TYPE;
        REGISTRO_NO_ENCONTRADO EXCEPTION;
    BEGIN
        DELETE SALIR_EN
        WHERE NOMBRE_PLATAFORMA = V_NOM_PLAT;
        DELETE CREARSE_PARA
        WHERE NOMBRE_PLATAFORMA = V_NOM_PLAT;
        DELETE PLATAFORMAS
        WHERE NOMBRE = V_NOM_PLAT
        RETURNING NOMBRE INTO DATO;
        
        IF DATO IS NULL THEN 
        RAISE REGISTRO_NO_ENCONTRADO;
        END IF;
        RETURN NULL;
    EXCEPTION 
        WHEN REGISTRO_NO_ENCONTRADO THEN
            RETURN 'PLATAFORMA NO ENCONTRADA';
        WHEN OTHERS THEN
            RETURN SQLERRM;
    END ELIMINAR_PLATAFORMA_COMPLETO;
    
    PROCEDURE OBTENER_PLATAFORMA(V_NOM_PLAT PLATAFORMAS.NOMBRE%TYPE, A_PLATAFORMA OUT ARRAY_DATOS, RESULTADO OUT VARCHAR2)
    IS
    BEGIN
        SELECT * INTO A_PLATAFORMA(1), A_PLATAFORMA(2) 
        FROM PLATAFORMAS WHERE NOMBRE = V_NOM_PLAT
        ORDER BY 1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RESULTADO := 'PLATAFORMA NO ENCONTRADA';
        WHEN OTHERS THEN
            RESULTADO := SQLERRM;
    END OBTENER_PLATAFORMA;
    
    PROCEDURE CONSULTAR_POR_PLATAFORMA(V_NOM_PLAT PLATAFORMAS.NOMBRE%TYPE, A_PLATAFORMA OUT ARRAY_DATOS, C_AVENTURAS OUT CURSOR_DATOS, RESULTADO OUT VARCHAR2)
    IS
    BEGIN
        OBTENER_PLATAFORMA(V_NOM_PLAT, A_PLATAFORMA, RESULTADO);
        IF RESULTADO IS NULL THEN
        OPEN C_AVENTURAS 
        FOR 
            SELECT * FROM AVENTURAS A
                WHERE EXISTS(SELECT 'X' FROM CREARSE_PARA 
                            WHERE TITULO_AVENTURA = A.TITULO AND 
                                NOMBRE_PLATAFORMA = V_NOM_PLAT)
                            ORDER BY 1;
        END IF;
    END CONSULTAR_POR_PLATAFORMA;
    
    PROCEDURE OBTENER_AVENTURA(V_TIT_AVEN AVENTURAS.TITULO%TYPE, A_AVENTURA OUT ARRAY_DATOS, RESULTADO OUT VARCHAR2)
    IS
    BEGIN
        SELECT TITULO, PORTADA, ANYO, DESCRIPCION, OBJETIVO, TITULO_REMAKE, IMPLEMENTACION INTO A_AVENTURA(1), A_AVENTURA(2), A_AVENTURA(3), A_AVENTURA(4), 
            A_AVENTURA(5), A_AVENTURA(6), A_AVENTURA(7)
        FROM AVENTURAS WHERE TITULO = V_TIT_AVEN
        ORDER BY 1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RESULTADO := 'AVENTURA NO ENCONTRADA';
        WHEN OTHERS THEN
            RESULTADO := SQLERRM;
    END OBTENER_AVENTURA;
     
    PROCEDURE CONSULTAR_POR_AVENTURA(V_TIT_AVEN AVENTURAS.TITULO%TYPE, A_AVENTURA OUT ARRAY_DATOS, C_PLATAFORMAS OUT CURSOR_DATOS, RESULTADO OUT VARCHAR2)
    IS
    BEGIN
        OBTENER_AVENTURA(V_TIT_AVEN, A_AVENTURA, RESULTADO);
        IF RESULTADO IS NULL THEN
            OPEN C_PLATAFORMAS 
            FOR 
                SELECT * FROM PLATAFORMAS P
                WHERE EXISTS(SELECT 'X' FROM CREARSE_PARA 
                            WHERE NOMBRE_PLATAFORMA = P.NOMBRE AND 
                                TITULO_AVENTURA = V_TIT_AVEN)
                            ORDER BY 1;
        END IF;
    END CONSULTAR_POR_AVENTURA;
    
    PROCEDURE MADRE(OPCION VARCHAR2, OPCION2 VARCHAR2, OPCION3 VARCHAR2, V_NOM_PLAT PLATAFORMAS.NOMBRE%TYPE, 
            N_POT_PLAT PLATAFORMAS.POTENCIA%TYPE, V_TIT_AVEN AVENTURAS.TITULO%TYPE, 
            V_POR_AVEN AVENTURAS.PORTADA%TYPE, N_ANYO_AVEN AVENTURAS.ANYO%TYPE, 
            V_DES_AVEN AVENTURAS.DESCRIPCION%TYPE, V_OBJ_AVEN AVENTURAS.OBJETIVO%TYPE, 
            V_TITRK_AVEN AVENTURAS.TITULO_REMAKE%TYPE, V_IMP_AVEN AVENTURAS.IMPLEMENTACION%TYPE,
            A_TABLA_BUSQUEDA OUT ARRAY_DATOS, C_TABLA_COINCIDENCIAS OUT CURSOR_DATOS, RESULTADO OUT VARCHAR2)
    IS
    BEGIN
        IF OPCION = 'INSERTAR' THEN
            RESULTADO := INSERTAR_CREACION(V_NOM_PLAT, 
            N_POT_PLAT, V_TIT_AVEN, 
            V_POR_AVEN, N_ANYO_AVEN, 
            V_DES_AVEN, V_OBJ_AVEN, 
            V_TITRK_AVEN, V_IMP_AVEN);
        ELSIF OPCION = 'ELIMINAR' THEN
            IF OPCION2 = 'AVENTURA' THEN
                IF OPCION3 = 'NORMAL' THEN
                    RESULTADO := ELIMINAR_AVENTURA(V_TIT_AVEN);
                ELSIF OPCION3 = 'COMPLETO' THEN
                    RESULTADO := ELIMINAR_AVENTURA_COMPLETO(V_TIT_AVEN);
                END IF;
            ELSIF OPCION2 = 'PLATAFORMA' THEN
                IF OPCION3 = 'NORMAL' THEN
                    RESULTADO := ELIMINAR_PLATAFORMA(V_NOM_PLAT);
                ELSIF OPCION3 = 'COMPLETO' THEN
                    RESULTADO := ELIMINAR_PLATAFORMA_COMPLETO(V_NOM_PLAT);
                END IF;
            END IF;
        ELSIF OPCION = 'CONSULTAR' THEN
            IF OPCION2 = 'AVENTURA' THEN
                CONSULTAR_POR_AVENTURA(V_TIT_AVEN, A_TABLA_BUSQUEDA, 
                    C_TABLA_COINCIDENCIAS, RESULTADO);
            ELSIF OPCION2 = 'PLATAFORMA' THEN
                CONSULTAR_POR_PLATAFORMA(V_NOM_PLAT, A_TABLA_BUSQUEDA, 
                    C_TABLA_COINCIDENCIAS, RESULTADO);
            END IF;
        ELSIF OPCION = 'RELLENAR' THEN
            IF OPCION2 = 'AVENTURA' THEN
                OBTENER_AVENTURA(V_TIT_AVEN, A_TABLA_BUSQUEDA, RESULTADO);
            ELSIF OPCION2 = 'PLATAFORMA' THEN
                OBTENER_PLATAFORMA(V_NOM_PLAT, A_TABLA_BUSQUEDA, RESULTADO);
            END IF;
        ELSE
            RESULTADO := 'OPCIÓN NO VÁLIDA';
        END IF;
    END MADRE;
    
END GESTION;
/